name: Build ESP32 Firmware

on:
  push:
    branches: [ main ]
    paths: ['controller/**']
  pull_request:
    branches: [ main ]
    paths: ['controller/**']
  workflow_dispatch:

# Add permissions for artifact upload
permissions:
  contents: read
  actions: write

jobs:ESP32 Firmware

on:
  push:
    branches: [main]
    paths: ["controller/**"]
  pull_request:
    branches: [main]
    paths: ["controller/**"]
  workflow_dispatch:

jobs:
  build-firmware:
    runs-on: ubuntu-latest
    name: Build ESP32 Firmware

    steps:
      - uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Build firmware
        run: |
          cd controller
          pio run

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: esp32-firmware
          path: |
            controller/.pio/build/*/firmware.bin
            controller/.pio/build/*/firmware.elf
          retention-days: 30

      - name: Create firmware info
        run: |
          cd controller
          echo "# ESP32 Firmware Build Info" > firmware-info.md
          echo "" >> firmware-info.md
          echo "**Build Date:** $(date)" >> firmware-info.md
          echo "**Commit:** ${{ github.sha }}" >> firmware-info.md
          echo "**Server URL:** ws://cides06.gm.fh-koeln.de:3001/ws" >> firmware-info.md
          echo "" >> firmware-info.md
          echo "## Flash Instructions" >> firmware-info.md
          echo "1. Download the firmware.bin file from the artifacts" >> firmware-info.md
          echo "2. Use ESP Flash Tool or Arduino IDE to flash the firmware" >> firmware-info.md
          echo "3. The device will automatically connect to the production server" >> firmware-info.md

      - name: Upload firmware info
        uses: actions/upload-artifact@v4
        with:
          name: firmware-info
          path: controller/firmware-info.md
          retention-days: 30
